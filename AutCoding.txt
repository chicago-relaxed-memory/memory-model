Def: e sees (W x v) if (W x v) precedes it and there is no
intervening conflicting write to x.

Def: Given P, e in P,
     state(e) = {(W x v) | e sees (W x v), e does not see (W x v') for v'not= v}

Def: An automaton is a labeled partial order.  The labels associated a 
mapping of vars to value. We denote the labels of an element p by state(p).

Def: P |= A
if there is a homomorphism=monotone function f from
   P --> A such that
   state(e) supseteq state(f(e)) 

Fact: By definition, aut-satisfaction is a prefix closed property.

Example.
 r1=x                               r2=y              
 y= r1+1                            x=r2
 u=y                                
(x,y,u) aut: 
   000 --> 010 --> 011
   01* --> 11*

Proof: We want to prove that u<=1 at the end.

Consider prefixes of the two threads with no (W y v),(R x w) for v >=2, w >=1
  The restriction of the prefixes to the individual threads satisfy the automaton.
  So, the composition of the threads, say P, satisfy the automaton

  So,   P |= closed(x,y) ==> u<=1
  ===>  new xy. P |= u <=1
        